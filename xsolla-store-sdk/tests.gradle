import groovy.json.JsonSlurper

def readVariable(variableName) {
    File localPropertiesFile = project.rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(localPropertiesFile))
        return properties[variableName]
    } else {
        return System.getenv(variableName)
    }
}

tasks.register('setupTestVariables') {
    doLast {
        def merchantId = readVariable('TEST_STORE_MERCHANT_ID')
        def projectId = readVariable('TEST_STORE_PROJECT_ID')
        def apiKey = readVariable('TEST_STORE_API_KEY')
        def userId = readVariable("TEST_LOGIN_USER_ID")

        def connection = new URL("https://api.xsolla.com/merchant/v2/merchants/${merchantId}/token").openConnection()
        def message = "{\"settings\":{\"project_id\":${projectId}},\"user\":{\"id\":{\"value\":\"user123\"}}}"
        connection.setRequestMethod("POST")
        connection.setDoOutput(true)
        connection.setRequestProperty("Authorization", "Basic " + "${merchantId}:${apiKey}".bytes.encodeBase64().toString())
        connection.setRequestProperty("Content-Type", "application/json")
        connection.getOutputStream().write(message.getBytes("UTF-8"))
        def output = connection.getInputStream().getText()

        def accessToken = new JsonSlurper().parseText(output).token

        def fileContent = """//Do not edit this file manually
package com.xsolla.android.store

const val projectId = ${projectId}
const val userToken = "${accessToken}"
const val userId = "${userId}"
"""
        File file = new File("xsolla-store-sdk/src/test/java/com/xsolla/android/store/SecureTestParams.kt")
        file.write fileContent
    }
}